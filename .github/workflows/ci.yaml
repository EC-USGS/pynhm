name: CI
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

env:
  #WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18417/w_HPCKit_p_2022.1.0.93_offline.exe
  #LINUX_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18438/l_HPCKit_p_2022.1.1.97_offline.sh
  MACOS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18341/m_HPCKit_p_2022.1.0.86_offline.dmg

jobs:
  test:
    name: ${{ matrix.os}} py${{ matrix.python-version }}

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      fail-fast: false
      matrix:
        #os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        os: ["macos-latest"]
        python-version: ["3.8"]  # , "3.9", "3.10"]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4

      - name: Set environment variables
        run: |
          if [[ ${{ matrix.os }} == windows* ]] ;
          then
            echo "CONDA_ENV_FILE=ci/requirements/environment-windows.yml" >> $GITHUB_ENV
          else
            echo "CONDA_ENV_FILE=ci/requirements/environment.yml" >> $GITHUB_ENV
          fi
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Cache conda
        uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-py${{ matrix.python-version }}-${{
            hashFiles('ci/requirements/**.yml') }}

      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          channel-priority: strict
          mamba-version: "*"
          activate-environment: pynhm-tests
          auto-update-conda: false
          python-version: ${{ matrix.python-version }}
          use-only-tar-bz2: true

      - name: Install conda dependencies
        run: |
          mamba env update -f $CONDA_ENV_FILE

      #- name: Print python package versions
      #  run: |
      #    .github/common/python-version.sh
      - name: Version info
        run: |
          conda info -a
          conda list

      - name: Install this package
        run: |
          python -m pip install --no-deps -e .

      - name: Test applications
        working-directory: autotest
        run: |
          pytest -v

      - name: Import pynhm
        run: |
          python -c "import pynhm
      - name: Run tests
        run: python -m pytest -n 4
          --cov-report=xml
          --junitxml=pytest.xml

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Test results for ${{ runner.os }}-${{ matrix.python-version }}
          path: pytest.xml

      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: RUNNER_OS,PYTHON_VERSION
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
